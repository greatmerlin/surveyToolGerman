{"ast":null,"code":"var _jsxFileName = \"/Users/theologosbaxevanos/Projects/pa_5-projektarbeit/src/frontend/src/Components/InsertCode.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Alert, Button, Form } from \"react-bootstrap\";\n/**\n * Component handles missing or invalid urls for participation and evaluation.\n *\n * @param {url} string, location for redirection\n * @param {urlId} uuid\n * @returns JSX.Element\n */\n\nexport default function InsertCode({\n  url,\n  urlId\n}) {\n  const [id, setId] = useState(\"\");\n  const [validated, setValidated] = useState(false);\n  const [showError, setShowError] = useState(true);\n  useEffect(() => {\n    setId(urlId);\n    setValidated(true);\n  }, [urlId]);\n\n  const submitForm = e => {\n    const form = e.currentTarget;\n\n    if (form.checkValidity() === false) {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n  };\n\n  const updateId = e => {\n    setId(e.target.value);\n    setShowError(false);\n  };\n\n  return /*#__PURE__*/React.createElement(Form, {\n    id: \"submit-form\",\n    noValidate: true,\n    onSubmit: submitForm,\n    validated: validated,\n    action: \"/\" + url + \"/\" + id,\n    style: {\n      marginTop: \"25vh\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"code-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    className: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, \"Code\"), /*#__PURE__*/React.createElement(Form.Control, {\n    value: id,\n    onChange: updateId,\n    required: true,\n    pattern: \"^[0-9a-fA-F]{8}\\\\b-[0-9a-fA-F]{4}\\\\b-[0-9a-fA-F]{4}\\\\b-[0-9a-fA-F]{4}\\\\b-[0-9a-fA-F]{12}$\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, \"Der Code ist in einem falschen Format. Bitte verwende das Format 'xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx'.\")), showError && /*#__PURE__*/React.createElement(Alert, {\n    variant: \"danger\",\n    className: \"mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, \"Der Code ist leider nicht g\\xFCltig.\"), /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"d-flex justify-content-end mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"link\",\n    className: \"text-white\",\n    href: \"/selectPath\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, \"Abbrechen\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, \"Code absenden\")));\n}","map":{"version":3,"sources":["/Users/theologosbaxevanos/Projects/pa_5-projektarbeit/src/frontend/src/Components/InsertCode.js"],"names":["React","useState","useEffect","Alert","Button","Form","InsertCode","url","urlId","id","setId","validated","setValidated","showError","setShowError","submitForm","e","form","currentTarget","checkValidity","preventDefault","stopPropagation","updateId","target","value","marginTop"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Alert, Button, Form } from \"react-bootstrap\";\n\n/**\n * Component handles missing or invalid urls for participation and evaluation.\n *\n * @param {url} string, location for redirection\n * @param {urlId} uuid\n * @returns JSX.Element\n */\n\nexport default function InsertCode({ url, urlId }) {\n  const [id, setId] = useState(\"\");\n  const [validated, setValidated] = useState(false);\n  const [showError, setShowError] = useState(true);\n\n  useEffect(() => {\n    setId(urlId);\n    setValidated(true);\n  }, [urlId]);\n\n  const submitForm = (e) => {\n    const form = e.currentTarget;\n    if (form.checkValidity() === false) {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n  };\n\n  const updateId = (e) => {\n    setId(e.target.value);\n    setShowError(false);\n  };\n\n  return (\n    <Form\n      id=\"submit-form\"\n      noValidate\n      onSubmit={submitForm}\n      validated={validated}\n      action={\"/\" + url + \"/\" + id}\n      style={{ marginTop: \"25vh\" }}\n    >\n      <Form.Group controlId=\"code-input\">\n        <Form.Label className=\"h5\">Code</Form.Label>\n        <Form.Control\n          value={id}\n          onChange={updateId}\n          required\n          pattern=\"^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$\"\n        />\n        <Form.Control.Feedback type=\"invalid\">\n          Der Code ist in einem falschen Format. Bitte verwende das Format\n          'xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx'.\n        </Form.Control.Feedback>\n      </Form.Group>\n      {showError && (\n        <Alert variant=\"danger\" className=\"mt-3\">\n          Der Code ist leider nicht g√ºltig.\n        </Alert>\n      )}\n      <Form.Group className=\"d-flex justify-content-end mt-3\">\n        <Button variant=\"link\" className=\"text-white\" href=\"/selectPath\">\n          Abbrechen\n        </Button>\n        <Button variant=\"primary\" type=\"submit\">\n          Code absenden\n        </Button>\n      </Form.Group>\n    </Form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}