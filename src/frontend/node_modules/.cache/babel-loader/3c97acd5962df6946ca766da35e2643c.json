{"ast":null,"code":"var _jsxFileName = \"/Users/theologosbaxevanos/Projects/pa_5-projektarbeit/src/frontend/src/Components/MessageToast.js\";\nimport React from \"react\";\nimport { Toast } from \"react-bootstrap\";\n/**\n * Renders message to user. Can be used to show errors or other messages.\n *\n * @param {visibility} boolean, if toast should be visible.\n * @param {onClose} function, to handle when user clicks on close button.\n * @param {error} boolean, if this is an error message, default is {true}.\n * @param {body} string, message.\n * @returns JSX.Element\n */\n\nexport default function MessageToast({\n  visibility,\n  onClose,\n  error = true,\n  body\n}) {\n  const title = error ? \"Leider ist ein Fehler aufgetreten\" : \"Erfolg\";\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"position-absolute\",\n    style: {\n      left: \"2rem\",\n      bottom: \"5rem\",\n      zIndex: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Toast, {\n    show: visibility,\n    onClose: onClose,\n    animation: false,\n    style: {\n      backgroundColor: \"rgb(255, 255, 255)\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Toast.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    className: `mr-auto ${error ? \"text-danger\" : \"text-success\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, title)), /*#__PURE__*/React.createElement(Toast.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, body), error && /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }, \"Melde dich bitte bei den Administratoren.\"))));\n}","map":{"version":3,"sources":["/Users/theologosbaxevanos/Projects/pa_5-projektarbeit/src/frontend/src/Components/MessageToast.js"],"names":["React","Toast","MessageToast","visibility","onClose","error","body","title","left","bottom","zIndex","backgroundColor"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,iBAAtB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAASC,YAAT,CAAsB;AACnCC,EAAAA,UADmC;AAEnCC,EAAAA,OAFmC;AAGnCC,EAAAA,KAAK,GAAG,IAH2B;AAInCC,EAAAA;AAJmC,CAAtB,EAKZ;AACD,QAAMC,KAAK,GAAGF,KAAK,GAAG,mCAAH,GAAyC,QAA5D;AAEA,sBACE;AACE,IAAA,SAAS,EAAC,mBADZ;AAEE,IAAA,KAAK,EAAE;AAAEG,MAAAA,IAAI,EAAE,MAAR;AAAgBC,MAAAA,MAAM,EAAE,MAAxB;AAAgCC,MAAAA,MAAM,EAAE;AAAxC,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAEP,UADR;AAEE,IAAA,OAAO,EAAEC,OAFX;AAGE,IAAA,SAAS,EAAE,KAHb;AAIE,IAAA,KAAK,EAAE;AAAEO,MAAAA,eAAe,EAAE;AAAnB,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAG,WAAUN,KAAK,GAAG,aAAH,GAAmB,cAAe,EAD/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGGE,KAHH,CADF,CANF,eAaE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMD,IAAN,CADF,EAEGD,KAAK,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDAFZ,CAbF,CAJF,CADF;AAyBD","sourcesContent":["import React from \"react\";\nimport { Toast } from \"react-bootstrap\";\n\n/**\n * Renders message to user. Can be used to show errors or other messages.\n *\n * @param {visibility} boolean, if toast should be visible.\n * @param {onClose} function, to handle when user clicks on close button.\n * @param {error} boolean, if this is an error message, default is {true}.\n * @param {body} string, message.\n * @returns JSX.Element\n */\n\nexport default function MessageToast({\n  visibility,\n  onClose,\n  error = true,\n  body,\n}) {\n  const title = error ? \"Leider ist ein Fehler aufgetreten\" : \"Erfolg\";\n\n  return (\n    <div\n      className=\"position-absolute\"\n      style={{ left: \"2rem\", bottom: \"5rem\", zIndex: 20 }}\n    >\n      <Toast\n        show={visibility}\n        onClose={onClose}\n        animation={false}\n        style={{ backgroundColor: \"rgb(255, 255, 255)\" }}\n      >\n        <Toast.Header>\n          <strong\n            className={`mr-auto ${error ? \"text-danger\" : \"text-success\"}`}\n          >\n            {title}\n          </strong>\n        </Toast.Header>\n        <Toast.Body>\n          <pre>{body}</pre>\n          {error && <small>Melde dich bitte bei den Administratoren.</small>}\n        </Toast.Body>\n      </Toast>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}