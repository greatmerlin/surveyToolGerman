{"ast":null,"code":"var _jsxFileName = \"/Users/theologosbaxevanos/Projects/pa_5-projektarbeit/src/frontend/src/Components/Question.js\";\nimport React from \"react\";\nimport { Alert, Card, Form } from \"react-bootstrap\";\nimport { QUESTION_TYPES } from \"../Config\";\nimport AddButton from \"./AddButton\";\nimport AnswerOption from \"./AnswerOption\";\nimport DeleteButton from \"./DeleteButton\";\n/**\n * Question box. Includes all options for user input for the question, question type and the corresponding answer options.\n *\n * @param {questionIndex} number\n * @param {removeQuestion} function\n * @param {answerOptions} function\n * @param {addAnswerOption} function\n * @param {removeAnswerOption} function\n * @param {questionValue} function\n * @param {updateQuestion} function\n * @param {updateAnswerOption} function\n * @param {updateQuestionType} function\n * @param {questionType} enum, MULTIPLE_CHOICE or MULTISELECT\n * @param {errorState} list of errors\n * @returns JSX.Element\n */\n\nexport default function Question({\n  questionIndex,\n  removeQuestion,\n  answerOptions,\n  addAnswerOption,\n  removeAnswerOption,\n  questionValue,\n  updateQuestion,\n  updateAnswerOption,\n  updateQuestionType,\n  questionType,\n  errorState\n}) {\n  const questionErrors = () => {\n    return errorState.filter(error => error.questionIndex === questionIndex);\n  };\n\n  return /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: questionIndex,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex align-items-center justify-content-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    className: \"h5 m-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, \"Frage #\", questionIndex + 1), /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"d-flex align-items-center m-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    className: \"text-muted mb-0 mr-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }\n  }, \"Typ\"), /*#__PURE__*/React.createElement(Form.Control, {\n    as: \"select\",\n    onChange: updateQuestionType,\n    value: questionType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: QUESTION_TYPES.MULTIPLE_CHOICE,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, \"Einfachauswahl\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: QUESTION_TYPES.MULTISELECT,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, \"Mehrfachauswahl\")))), /*#__PURE__*/React.createElement(Form.Text, {\n    className: \"text-muted text-right mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, questionType === QUESTION_TYPES.MULTIPLE_CHOICE ? \"Teilnehmer muss exakt eine Antwort auswählen.\" : \"Teilnehmer kann 0, 1 oder mehrere Antworten auswählen.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"position-absolute\",\n    style: {\n      right: \"-20px\",\n      top: \"-20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(DeleteButton, {\n    hint: \"Frage l\\xF6schen\",\n    action: removeQuestion,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Erfasse hier eine Frage.\",\n    value: questionValue,\n    onChange: updateQuestion,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, \"Das Feld darf nicht leer sein.\")), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, \"Antworten\"), answerOptions.map((answerOption, i) => /*#__PURE__*/React.createElement(AnswerOption, {\n    key: i,\n    answerOptionValue: answerOption,\n    answerOptionIndex: `${questionIndex}-${i}`,\n    removeAnswerOption: () => removeAnswerOption(i),\n    updateAnswerOption: (() => updateAnswerOption(i))(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  })), questionErrors().length > 0 && /*#__PURE__*/React.createElement(Alert, {\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, questionErrors().map(error => error.errorMsg)), /*#__PURE__*/React.createElement(AddButton, {\n    hint: \"Antwort hinzuf\\xFCgen\",\n    action: addAnswerOption,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/theologosbaxevanos/Projects/pa_5-projektarbeit/src/frontend/src/Components/Question.js"],"names":["React","Alert","Card","Form","QUESTION_TYPES","AddButton","AnswerOption","DeleteButton","Question","questionIndex","removeQuestion","answerOptions","addAnswerOption","removeAnswerOption","questionValue","updateQuestion","updateAnswerOption","updateQuestionType","questionType","errorState","questionErrors","filter","error","MULTIPLE_CHOICE","MULTISELECT","right","top","map","answerOption","i","length","errorMsg"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Alert, Card, Form } from \"react-bootstrap\";\nimport { QUESTION_TYPES } from \"../Config\";\nimport AddButton from \"./AddButton\";\nimport AnswerOption from \"./AnswerOption\";\nimport DeleteButton from \"./DeleteButton\";\n\n/**\n * Question box. Includes all options for user input for the question, question type and the corresponding answer options.\n *\n * @param {questionIndex} number\n * @param {removeQuestion} function\n * @param {answerOptions} function\n * @param {addAnswerOption} function\n * @param {removeAnswerOption} function\n * @param {questionValue} function\n * @param {updateQuestion} function\n * @param {updateAnswerOption} function\n * @param {updateQuestionType} function\n * @param {questionType} enum, MULTIPLE_CHOICE or MULTISELECT\n * @param {errorState} list of errors\n * @returns JSX.Element\n */\n\nexport default function Question({\n  questionIndex,\n  removeQuestion,\n  answerOptions,\n  addAnswerOption,\n  removeAnswerOption,\n  questionValue,\n  updateQuestion,\n  updateAnswerOption,\n  updateQuestionType,\n  questionType,\n  errorState,\n}) {\n  const questionErrors = () => {\n    return errorState.filter((error) => error.questionIndex === questionIndex);\n  };\n\n  return (\n    <Card>\n      <Card.Body>\n        <Form.Group controlId={questionIndex}>\n          <div className=\"d-flex align-items-center justify-content-between\">\n            <Form.Label className=\"h5 m-0\">\n              Frage #{questionIndex + 1}\n            </Form.Label>\n            <Form.Group className=\"d-flex align-items-center m-0\">\n              <Form.Label className=\"text-muted mb-0 mr-2\">Typ</Form.Label>\n              <Form.Control\n                as=\"select\"\n                onChange={updateQuestionType}\n                value={questionType}\n              >\n                <option value={QUESTION_TYPES.MULTIPLE_CHOICE}>\n                  Einfachauswahl\n                </option>\n                <option value={QUESTION_TYPES.MULTISELECT}>\n                  Mehrfachauswahl\n                </option>\n              </Form.Control>\n            </Form.Group>\n          </div>\n          <Form.Text className=\"text-muted text-right mb-3\">\n            {questionType === QUESTION_TYPES.MULTIPLE_CHOICE\n              ? \"Teilnehmer muss exakt eine Antwort auswählen.\"\n              : \"Teilnehmer kann 0, 1 oder mehrere Antworten auswählen.\"}\n          </Form.Text>\n          <div\n            className=\"position-absolute\"\n            style={{\n              right: \"-20px\",\n              top: \"-20px\",\n            }}\n          >\n            <DeleteButton hint=\"Frage löschen\" action={removeQuestion} />\n          </div>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Erfasse hier eine Frage.\"\n            value={questionValue}\n            onChange={updateQuestion}\n            required\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Das Feld darf nicht leer sein.\n          </Form.Control.Feedback>\n        </Form.Group>\n        <hr />\n        <h5 className=\"mb-3\">Antworten</h5>\n        {answerOptions.map((answerOption, i) => (\n          <AnswerOption\n            key={i}\n            answerOptionValue={answerOption}\n            answerOptionIndex={`${questionIndex}-${i}`}\n            removeAnswerOption={() => removeAnswerOption(i)}\n            updateAnswerOption={(() => updateAnswerOption(i))()}\n          />\n        ))}\n        {questionErrors().length > 0 && (\n          <Alert variant=\"danger\">\n            {questionErrors().map((error) => error.errorMsg)}\n          </Alert>\n        )}\n        <AddButton hint=\"Antwort hinzufügen\" action={addAnswerOption} />\n      </Card.Body>\n    </Card>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}