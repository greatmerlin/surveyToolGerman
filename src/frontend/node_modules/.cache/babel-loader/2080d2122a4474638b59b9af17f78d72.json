{"ast":null,"code":"var _jsxFileName = \"/Users/theologosbaxevanos/Projects/pa_5-projektarbeit/src/frontend/src/Components/BarChart.js\";\nimport React from \"react\";\n/**\n * Displays a bar chart in the context of the full survey.\n *\n * @param {value} number, total votes for this answer.\n * @param {max} number, maximum number of votes for any answer in the survey for context.\n * @returns JSX.Element\n */\n\nexport default function BarChart({\n  value,\n  max\n}) {\n  const getPercentage = () => {\n    if (max === 0) {\n      return 0;\n    }\n\n    const percentage = value / max * 100;\n    return Math.max(0, Math.min(100, percentage));\n  };\n\n  return /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      width: `${getPercentage()}%`\n    },\n    className: \"bar-chart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  });\n}","map":{"version":3,"sources":["/Users/theologosbaxevanos/Projects/pa_5-projektarbeit/src/frontend/src/Components/BarChart.js"],"names":["React","BarChart","value","max","getPercentage","percentage","Math","min","width"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAASC,QAAT,CAAkB;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAlB,EAAkC;AAC/C,QAAMC,aAAa,GAAG,MAAM;AAC1B,QAAID,GAAG,KAAK,CAAZ,EAAe;AACb,aAAO,CAAP;AACD;;AACD,UAAME,UAAU,GAAIH,KAAK,GAAGC,GAAT,GAAgB,GAAnC;AAEA,WAAOG,IAAI,CAACH,GAAL,CAAS,CAAT,EAAYG,IAAI,CAACC,GAAL,CAAS,GAAT,EAAcF,UAAd,CAAZ,CAAP;AACD,GAPD;;AASA,sBACE;AACE,IAAA,KAAK,EAAE;AACLG,MAAAA,KAAK,EAAG,GAAEJ,aAAa,EAAG;AADrB,KADT;AAIE,IAAA,SAAS,EAAC,WAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAQD","sourcesContent":["import React from \"react\";\n\n/**\n * Displays a bar chart in the context of the full survey.\n *\n * @param {value} number, total votes for this answer.\n * @param {max} number, maximum number of votes for any answer in the survey for context.\n * @returns JSX.Element\n */\n\nexport default function BarChart({ value, max }) {\n  const getPercentage = () => {\n    if (max === 0) {\n      return 0;\n    }\n    const percentage = (value / max) * 100;\n\n    return Math.max(0, Math.min(100, percentage));\n  };\n\n  return (\n    <span\n      style={{\n        width: `${getPercentage()}%`,\n      }}\n      className=\"bar-chart\"\n    ></span>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}